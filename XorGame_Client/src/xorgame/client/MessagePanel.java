/* This software is licensed under XorGame 1.0 license. License does not expire.
 * Can be used for creating unlimited applications.
 * Can be distributed in binary or object form only.
 * Non-commercial use only.
 * Cannot modify source-code for any purpose (cannot create derivative works).
 */
package xorgame.client;

import java.awt.CardLayout;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import xorgame.*;
import java.text.*;
/**
 *
 * @author Artur
 */
public class MessagePanel extends javax.swing.JPanel {
    Main main;
    Message msg;
    
    /**
     * Creates new form MessagePanel
     */
    public MessagePanel() {
        initComponents();
    }
    
    public void setMainParent(Main main_) {
        main = main_;
    }
    
    public void setContent(Message message) {
        Format formatter = new SimpleDateFormat("dd.MM 'at' hh:mm:ss");
        msg = message;
        fromLabel.setText( message.getUserFrom().getNick()); 
        toLabel.setText(message.getUserTo().getNick()); 
        text.setText(message.getText()); 
        dateLabel.setText(formatter.format(message.getSendTime())); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        replyButton = new javax.swing.JButton();
        fromPanel = new javax.swing.JPanel();
        from = new javax.swing.JLabel();
        fromLabel = new javax.swing.JLabel();
        toPanel = new javax.swing.JPanel();
        to = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        datePanel = new javax.swing.JPanel();
        date = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 25));
        setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204))));
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0};
        layout.rowHeights = new int[] {0, 10, 0, 10, 0};
        setLayout(layout);

        text.setEditable(false);
        text.setBackground(new java.awt.Color(0, 0, 50));
        text.setColumns(20);
        text.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        text.setForeground(new java.awt.Color(255, 255, 255));
        text.setLineWrap(true);
        text.setRows(3);
        text.setText("\n");
        jScrollPane1.setViewportView(text);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.weighty = 0.5;
        add(jScrollPane1, gridBagConstraints);

        replyButton.setBackground(new java.awt.Color(0, 102, 51));
        replyButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        replyButton.setForeground(new java.awt.Color(255, 255, 255));
        replyButton.setText("Reply");
        replyButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        replyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replyButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        add(replyButton, gridBagConstraints);

        fromPanel.setBackground(new java.awt.Color(0, 0, 25));

        from.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        from.setForeground(new java.awt.Color(255, 255, 255));
        from.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        from.setText("From:");
        fromPanel.add(from);

        fromLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        fromLabel.setForeground(new java.awt.Color(255, 255, 255));
        fromLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fromPanel.add(fromLabel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(fromPanel, gridBagConstraints);

        toPanel.setBackground(new java.awt.Color(0, 0, 25));

        to.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        to.setForeground(new java.awt.Color(255, 255, 255));
        to.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        to.setText("To:");
        toPanel.add(to);

        toLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        toLabel.setForeground(new java.awt.Color(255, 255, 255));
        toLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        toPanel.add(toLabel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        add(toPanel, gridBagConstraints);

        datePanel.setBackground(new java.awt.Color(0, 0, 25));

        date.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        date.setForeground(new java.awt.Color(255, 255, 255));
        date.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        date.setText("Date:");
        datePanel.add(date);

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(255, 255, 255));
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        datePanel.add(dateLabel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        add(datePanel, gridBagConstraints);

        deleteButton.setBackground(new java.awt.Color(153, 0, 0));
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        add(deleteButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void replyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replyButtonActionPerformed
        main.getNewMessage().setFrom(main.getUser().getNick()); 
        main.getNewMessage().setTo(fromLabel.getText());
        main.getNewMessage().setContent(""); 
        CardLayout layout = (CardLayout)main.getWorkPanel().getLayout();
        layout.show(main.getWorkPanel(), "NewMessageCard"); 
    }//GEN-LAST:event_replyButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try { 
            if(JOptionPane.showConfirmDialog(main, "Do you want to delete this message?", "Really?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                main.getMainControler().deleteMessage(msg);
                main.getMessages().updateMessages();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(main, "Error while connecting to game server!", "Error", JOptionPane.ERROR_MESSAGE); 
            Logger.getLogger(MessagePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel date;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JPanel datePanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel from;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JPanel fromPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton replyButton;
    private javax.swing.JTextArea text;
    private javax.swing.JLabel to;
    private javax.swing.JLabel toLabel;
    private javax.swing.JPanel toPanel;
    // End of variables declaration//GEN-END:variables
}
