/* This software is licensed under XorGame 1.0 license. License does not expire.
 * Can be used for creating unlimited applications.
 * Can be distributed in binary or object form only.
 * Non-commercial use only.
 * Cannot modify source-code for any purpose (cannot create derivative works).
 */
package xorgame.client;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static xorgame.client.Shared.*;
import xorgame.*;
import java.text.NumberFormat;
import java.util.Locale;

/**
 * Panel with description of particular technology - cost and research time. 
 * @author Artur
 */
public class ResearchDescription extends javax.swing.JPanel {
    Main main;
    Research research;
    
    /**
     * Creates new form ResearchDescription
     */
    public ResearchDescription() {
        initComponents();
    }
    
    /**
     * Sets reference to main window of the client. Used to get session data and controler.
     * @param main_ Referrense to main window of the client. 
     */
    public void setMainParent(Main main_) {
        main = main_;
    }
    
    /**
     * Sets technology name and icon. 
     * @param research_ Technology to show. 
     * @param iconPath Path to icon of the technology. 
     */
    public void setContent(Research research_, String iconPath) {
        research = research_;
        iconLabel.setIcon(loadIcon(iconPath, ITEM_ICON_SIZE)); 
        nameLabel.setText(research.toString()); 
    }
    
    /**
     * Starts researching the technology to the next level. 
     */
    public void researchUpTech() {
        try {
            main.getMaterials().updateMaterials();
            if(main.getSelectedPlanet().getLaboratory() == 0)
                JOptionPane.showMessageDialog(main, "You must first build a laboratory!", "Cannot research", JOptionPane.ERROR_MESSAGE);
            else if(!main.getSelectedPlanet().getResearchOrderSet().isEmpty())
                JOptionPane.showMessageDialog(main, "Another research is in developing!", "Cannot build!", JOptionPane.ERROR_MESSAGE);
            else if(!main.getMainControler().researchEnabled(main.getSelectedPlanet().getPlanetPK(), research))
                JOptionPane.showMessageDialog(main, "Technical requirements are not met!", "Cannot build!", JOptionPane.ERROR_MESSAGE);
            else if(!main.getMainControler().researchEnoughMaterials(main.getSelectedPlanet().getPlanetPK(), research))
                JOptionPane.showMessageDialog(main, "You have not enough materials or energy!", "Cannot build!", JOptionPane.ERROR_MESSAGE);
            else {
                main.getMainControler().researchUp(main.getSelectedPlanet().getPlanetPK(), research);
                main.getMaterials().updateMaterials();
                JOptionPane.showMessageDialog(main, "Research sucessfully started!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(main, "Error while connecting to game server!", "Error", JOptionPane.ERROR_MESSAGE); 
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Updates description of the technology - cost and research time. Downoads data from database. 
     */
    public void updateDescription() {
        try {
            LvlLabel.setText(NumberFormat.getNumberInstance(Locale.US).format(main.getMainControler().researchLvl(main.getSelectedPlanet().getPlanetPK(), research)) + " lvl");
            MCostLabel.setText(NumberFormat.getNumberInstance(Locale.US).format(main.getMainControler().researchCost(main.getSelectedPlanet().getPlanetPK(), Material.M, research)));
            KCostLabel.setText(NumberFormat.getNumberInstance(Locale.US).format(main.getMainControler().researchCost(main.getSelectedPlanet().getPlanetPK(), Material.K, research)));
            DCostLabel.setText(NumberFormat.getNumberInstance(Locale.US).format(main.getMainControler().researchCost(main.getSelectedPlanet().getPlanetPK(), Material.D, research)));
            ACostLabel.setText(NumberFormat.getNumberInstance(Locale.US).format(main.getMainControler().researchCost(main.getSelectedPlanet().getPlanetPK(), Material.A, research)));
            timeLabel.setText(main.getMainControler().researchTime(main.getSelectedPlanet().getPlanetPK(), research));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(main, "Error while connecting to game server!", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ResearchDescription.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        researchPanel = new javax.swing.JPanel();
        iconLabel = new javax.swing.JLabel();
        descriptionPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        LvlLabel = new javax.swing.JLabel();
        jLabel137 = new javax.swing.JLabel();
        MCostLabel = new javax.swing.JLabel();
        jLabel138 = new javax.swing.JLabel();
        KCostLabel = new javax.swing.JLabel();
        jLabel139 = new javax.swing.JLabel();
        DCostLabel = new javax.swing.JLabel();
        jLabel140 = new javax.swing.JLabel();
        ACostLabel = new javax.swing.JLabel();
        vfel18 = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        startPanel = new javax.swing.JPanel();
        jLabel141 = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        researchPanel.setBackground(new java.awt.Color(0, 0, 25));
        researchPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        researchPanel.setLayout(new java.awt.GridLayout(1, 3));

        iconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconLabel.setText("jLabel29");
        researchPanel.add(iconLabel);

        descriptionPanel.setBackground(new java.awt.Color(0, 0, 25));
        descriptionPanel.setLayout(new java.awt.GridLayout(6, 2));

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(255, 255, 255));
        descriptionPanel.add(nameLabel);

        LvlLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        LvlLabel.setForeground(new java.awt.Color(255, 255, 255));
        descriptionPanel.add(LvlLabel);

        jLabel137.setForeground(new java.awt.Color(255, 255, 255));
        jLabel137.setText("Metal cost:");
        descriptionPanel.add(jLabel137);

        MCostLabel.setForeground(new java.awt.Color(255, 255, 255));
        descriptionPanel.add(MCostLabel);

        jLabel138.setForeground(new java.awt.Color(255, 255, 255));
        jLabel138.setText("Cristal cost:");
        descriptionPanel.add(jLabel138);

        KCostLabel.setForeground(new java.awt.Color(255, 255, 255));
        descriptionPanel.add(KCostLabel);

        jLabel139.setForeground(new java.awt.Color(255, 255, 255));
        jLabel139.setText("Deuter cost:");
        descriptionPanel.add(jLabel139);

        DCostLabel.setForeground(new java.awt.Color(255, 255, 255));
        descriptionPanel.add(DCostLabel);

        jLabel140.setForeground(new java.awt.Color(255, 255, 255));
        jLabel140.setText("Antimatter cost:");
        descriptionPanel.add(jLabel140);

        ACostLabel.setForeground(new java.awt.Color(255, 255, 255));
        descriptionPanel.add(ACostLabel);

        vfel18.setForeground(new java.awt.Color(255, 255, 255));
        vfel18.setText("Time to build:");
        descriptionPanel.add(vfel18);

        timeLabel.setForeground(new java.awt.Color(255, 255, 255));
        descriptionPanel.add(timeLabel);

        researchPanel.add(descriptionPanel);

        startPanel.setBackground(new java.awt.Color(0, 0, 25));
        startPanel.setLayout(new java.awt.GridLayout(3, 1));
        startPanel.add(jLabel141);

        startButton.setBackground(new java.awt.Color(0, 102, 0));
        startButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        startButton.setForeground(new java.awt.Color(255, 255, 255));
        startButton.setText("START");
        startButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 153)));
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        startPanel.add(startButton);

        researchPanel.add(startPanel);

        add(researchPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        researchUpTech();
    }//GEN-LAST:event_startButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ACostLabel;
    private javax.swing.JLabel DCostLabel;
    private javax.swing.JLabel KCostLabel;
    private javax.swing.JLabel LvlLabel;
    private javax.swing.JLabel MCostLabel;
    private javax.swing.JPanel descriptionPanel;
    private javax.swing.JLabel iconLabel;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel140;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPanel researchPanel;
    private javax.swing.JButton startButton;
    private javax.swing.JPanel startPanel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel vfel18;
    // End of variables declaration//GEN-END:variables
}
