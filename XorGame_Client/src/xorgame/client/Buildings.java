/* This software is licensed under XorGame 1.0 license. License does not expire.
 * Can be used for creating unlimited applications.
 * Can be distributed in binary or object form only.
 * Non-commercial use only.
 * Cannot modify source-code for any purpose (cannot create derivative works).
 */
package xorgame.client;

import xorgame.*;
import static xorgame.client.Shared.*;

/**
 * Panel containing descriptions of all buildings in the game. 
 * @author Artur
 */
public class Buildings extends javax.swing.JPanel {
    
    Main main;

    /**
     * Creates new form Buildings
     */
    public Buildings() {
        initComponents();
    }
    /**
     * Sets reference to main window of the client. Used to get session data and controler. 
     * @param main_ Reference to main window of the client. 
     */
    public void setMainParent(Main main_) {
        main = main_;
        
        metalMine.setMainParent(main); 
        cristalMine.setMainParent(main); 
        deuterExt.setMainParent(main); 
        fusion.setMainParent(main); 
        accelerator.setMainParent(main); 
        metalMag.setMainParent(main); 
        cristalMag.setMainParent(main); 
        deuterMag.setMainParent(main); 
        antimatterMag.setMainParent(main); 
        robot.setMainParent(main); 
        nanit.setMainParent(main); 
        shipyard.setMainParent(main); 
        laboratory.setMainParent(main); 
        observatory.setMainParent(main); 
        researchNet.setMainParent(main); 
        rayShield.setMainParent(main); 
    }
    
    /**
     * Sets buildings icons and names. 
     */
    public void setContent() {
        metalMine.setContent(Building.MetalMine, "/Resources/General_GUI/MetalMine.jpg");
        cristalMine.setContent(Building.CristalMine, "/Resources/General_GUI/CristalMine.jpg");
        deuterExt.setContent(Building.DeuterExt, "/Resources/General_GUI/DeuterExt.jpg");
        fusion.setContent(Building.Fusion, "/Resources/General_GUI/Fusion.jpg");
        accelerator.setContent(Building.Accelerator, "/Resources/General_GUI/Accelerator.jpg");
        metalMag.setContent(Building.MetalMag, "/Resources/General_GUI/MetalMag.jpg");
        cristalMag.setContent(Building.CristalMag, "/Resources/General_GUI/CristalMag.jpg");
        deuterMag.setContent(Building.DeuterMag, "/Resources/General_GUI/DeuterMag.jpg");
        antimatterMag.setContent(Building.AntimatterMag, "/Resources/General_GUI/AntimatterMag.jpg");
        robot.setContent(Building.Robot, "/Resources/General_GUI/Robot.jpg");
        nanit.setContent(Building.Nanit, "/Resources/General_GUI/Nanit.jpg");
        shipyard.setContent(Building.Shipyard, "/Resources/General_GUI/Shipyard.jpg");
        laboratory.setContent(Building.Laboratory, "/Resources/General_GUI/Laboratory.jpg");
        observatory.setContent(Building.Observatory, "/Resources/General_GUI/Observatory.jpg");
        researchNet.setContent(Building.ResearchNet, "/Resources/General_GUI/ResearchNet.jpg");
        rayShield.setContent(Building.RayShield, "/Resources/General_GUI/RayShield.jpg");
    }
    
    /**
     * Updates buildings descriptions from database. 
     */
    public void updateBuildings() {
        metalMine.updateDescription();
        cristalMine.updateDescription();
        deuterExt.updateDescription();
        fusion.updateDescription();
        accelerator.updateDescription();
        metalMag.updateDescription();
        cristalMag.updateDescription();
        deuterMag.updateDescription();
        antimatterMag.updateDescription();
        robot.updateDescription();
        nanit.updateDescription();
        shipyard.updateDescription();
        laboratory.updateDescription();
        observatory.updateDescription();
        researchNet.updateDescription();
        rayShield.updateDescription();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buildingsCardPanel = new javax.swing.JPanel();
        buildingsScrollPanel = new javax.swing.JScrollPane();
        buildingsPanel = new javax.swing.JPanel();
        metalMine = new xorgame.client.BuildingDescription();
        cristalMine = new xorgame.client.BuildingDescription();
        deuterExt = new xorgame.client.BuildingDescription();
        fusion = new xorgame.client.BuildingDescription();
        accelerator = new xorgame.client.BuildingDescription();
        metalMag = new xorgame.client.BuildingDescription();
        cristalMag = new xorgame.client.BuildingDescription();
        deuterMag = new xorgame.client.BuildingDescription();
        antimatterMag = new xorgame.client.BuildingDescription();
        robot = new xorgame.client.BuildingDescription();
        nanit = new xorgame.client.BuildingDescription();
        shipyard = new xorgame.client.BuildingDescription();
        laboratory = new xorgame.client.BuildingDescription();
        observatory = new xorgame.client.BuildingDescription();
        researchNet = new xorgame.client.BuildingDescription();
        rayShield = new xorgame.client.BuildingDescription();

        setBackground(new java.awt.Color(0, 255, 255));
        setLayout(new java.awt.BorderLayout());

        buildingsCardPanel.setBackground(new java.awt.Color(255, 0, 0));
        buildingsCardPanel.setLayout(new java.awt.BorderLayout());

        buildingsScrollPanel.getVerticalScrollBar().setUnitIncrement(SCROLL_SPEED);

        buildingsPanel.setBackground(new java.awt.Color(0, 0, 25));
        buildingsPanel.setLayout(new java.awt.GridLayout(16, 1, 10, 10));
        buildingsPanel.add(metalMine);
        buildingsPanel.add(cristalMine);
        buildingsPanel.add(deuterExt);
        buildingsPanel.add(fusion);
        buildingsPanel.add(accelerator);
        buildingsPanel.add(metalMag);
        buildingsPanel.add(cristalMag);
        buildingsPanel.add(deuterMag);
        buildingsPanel.add(antimatterMag);
        buildingsPanel.add(robot);
        buildingsPanel.add(nanit);
        buildingsPanel.add(shipyard);
        buildingsPanel.add(laboratory);
        buildingsPanel.add(observatory);
        buildingsPanel.add(researchNet);
        buildingsPanel.add(rayShield);

        buildingsScrollPanel.setViewportView(buildingsPanel);

        buildingsCardPanel.add(buildingsScrollPanel, java.awt.BorderLayout.CENTER);

        add(buildingsCardPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private xorgame.client.BuildingDescription accelerator;
    private xorgame.client.BuildingDescription antimatterMag;
    private javax.swing.JPanel buildingsCardPanel;
    private javax.swing.JPanel buildingsPanel;
    private javax.swing.JScrollPane buildingsScrollPanel;
    private xorgame.client.BuildingDescription cristalMag;
    private xorgame.client.BuildingDescription cristalMine;
    private xorgame.client.BuildingDescription deuterExt;
    private xorgame.client.BuildingDescription deuterMag;
    private xorgame.client.BuildingDescription fusion;
    private xorgame.client.BuildingDescription laboratory;
    private xorgame.client.BuildingDescription metalMag;
    private xorgame.client.BuildingDescription metalMine;
    private xorgame.client.BuildingDescription nanit;
    private xorgame.client.BuildingDescription observatory;
    private xorgame.client.BuildingDescription rayShield;
    private xorgame.client.BuildingDescription researchNet;
    private xorgame.client.BuildingDescription robot;
    private xorgame.client.BuildingDescription shipyard;
    // End of variables declaration//GEN-END:variables
}
