/* This software is licensed under XorGame 1.0 license. License does not expire.
 * Can be used for creating unlimited applications.
 * Can be distributed in binary or object form only.
 * Non-commercial use only.
 * Cannot modify source-code for any purpose (cannot create derivative works).
 */
package xorgame.client;

import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.sql.SQLException;
import xorgame.*;
import java.awt.*;
import static xorgame.client.Shared.*;

/**
 * Start panel that allows new user to register or to log in on existing account. 
 * @author Artur
 */
public class LoginRegister extends javax.swing.JPanel {
    private Main main;

    /**
     * Creates new form LoginRegister
     */
    public LoginRegister() {
        initComponents();
        initComponents2();
    }
    
    /**
     * Sets reference to main window of the client. Used to get session data and controler.
     * @param main_ Referense to main window of the client. 
     */
    public void setMainParent(Main main_) {
        main = main_;
    }
    
    /**
     * Sets background image and reads remembered user nick and password from file. 
     */
    private void initComponents2() {
        try {
            Properties dbconf = new Properties();
            dbconf.load(getClass().getResourceAsStream("/META-INF/dbconf.properties"));
            
            String remUser = dbconf.getProperty("remUser");
            String remPassword = dbconf.getProperty("remPassword");
            
            nickLoginTextField.setText(remUser);
            passwordLoginTextField.setText(remPassword);
            backgroundLabel.setIcon(loadIcon("/xorgame/client/General_GUI/StartBackground2.jpg", BACKGROUND_SIZE));

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error while reading properties file!", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(LoginRegister.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        LogoLabel = new javax.swing.JLabel();
        LoginRegisterPanel = new javax.swing.JPanel();
        RegisterPanel = new javax.swing.JPanel();
        RegisterLabel = new javax.swing.JLabel();
        RegisterInputPanel = new javax.swing.JPanel();
        nickRegisterLabel = new javax.swing.JLabel();
        passwordRegisterLabel = new javax.swing.JLabel();
        repeatRegisterLabel = new javax.swing.JLabel();
        nickRegisterTextField = new javax.swing.JTextField();
        passwordRegisterTextField = new javax.swing.JPasswordField();
        repeatRegisterTextField = new javax.swing.JPasswordField();
        registerButton = new javax.swing.JButton();
        LoginPanel = new javax.swing.JPanel();
        LoginLabel = new javax.swing.JLabel();
        LoginInputPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        nickLoginTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        passwordLoginTextField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backgroundLabel = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        LogoLabel.setBackground(new java.awt.Color(0, 0, 25));
        LogoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LogoLabel.setIcon(loadIcon("/Resources/General_GUI/Logo.png", LOGO_SIZE));
        LogoLabel.setOpaque(true);
        add(LogoLabel, java.awt.BorderLayout.NORTH);

        LoginRegisterPanel.setBackground(new java.awt.Color(0, 0, 25));
        LoginRegisterPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        LoginRegisterPanel.setLayout(new java.awt.GridLayout(1, 2));

        RegisterPanel.setLayout(new java.awt.BorderLayout());

        RegisterLabel.setBackground(new java.awt.Color(0, 0, 25));
        RegisterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RegisterLabel.setIcon(loadIcon("/Resources/GUI_EN/Register.png", REGISTER_SIZE));
        RegisterLabel.setOpaque(true);
        RegisterPanel.add(RegisterLabel, java.awt.BorderLayout.PAGE_START);

        RegisterInputPanel.setBackground(new java.awt.Color(0, 0, 25));
        RegisterInputPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));
        java.awt.GridBagLayout RegisterInputPanelLayout = new java.awt.GridBagLayout();
        RegisterInputPanelLayout.columnWidths = new int[] {0, 0, 0};
        RegisterInputPanelLayout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0};
        RegisterInputPanel.setLayout(RegisterInputPanelLayout);

        nickRegisterLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nickRegisterLabel.setForeground(new java.awt.Color(255, 255, 255));
        nickRegisterLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nickRegisterLabel.setText("Nick:");
        nickRegisterLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.2;
        RegisterInputPanel.add(nickRegisterLabel, gridBagConstraints);

        passwordRegisterLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        passwordRegisterLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordRegisterLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passwordRegisterLabel.setText("Password: ");
        passwordRegisterLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.2;
        RegisterInputPanel.add(passwordRegisterLabel, gridBagConstraints);

        repeatRegisterLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        repeatRegisterLabel.setForeground(new java.awt.Color(255, 255, 255));
        repeatRegisterLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        repeatRegisterLabel.setText("Repeat password:");
        repeatRegisterLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.2;
        RegisterInputPanel.add(repeatRegisterLabel, gridBagConstraints);

        nickRegisterTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nickRegisterTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nickRegisterTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.2;
        RegisterInputPanel.add(nickRegisterTextField, gridBagConstraints);

        passwordRegisterTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passwordRegisterTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordRegisterTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.2;
        RegisterInputPanel.add(passwordRegisterTextField, gridBagConstraints);

        repeatRegisterTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        repeatRegisterTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                repeatRegisterTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.2;
        RegisterInputPanel.add(repeatRegisterTextField, gridBagConstraints);

        registerButton.setBackground(new java.awt.Color(51, 153, 0));
        registerButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        registerButton.setForeground(new java.awt.Color(102, 102, 102));
        registerButton.setText("REGISTER NOW!");
        registerButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.2;
        RegisterInputPanel.add(registerButton, gridBagConstraints);

        RegisterPanel.add(RegisterInputPanel, java.awt.BorderLayout.CENTER);

        LoginRegisterPanel.add(RegisterPanel);

        LoginPanel.setLayout(new java.awt.BorderLayout());

        LoginLabel.setBackground(new java.awt.Color(0, 0, 25));
        LoginLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LoginLabel.setIcon(loadIcon("/Resources/GUI_EN/Login.png", LOGIN_SIZE));
        LoginLabel.setOpaque(true);
        LoginPanel.add(LoginLabel, java.awt.BorderLayout.PAGE_START);

        LoginInputPanel.setBackground(new java.awt.Color(0, 0, 25));
        LoginInputPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));
        java.awt.GridBagLayout LoginInputPanelLayout = new java.awt.GridBagLayout();
        LoginInputPanelLayout.columnWidths = new int[] {0, 0, 0};
        LoginInputPanelLayout.rowHeights = new int[] {0, 20, 0, 20, 0, 20, 0};
        LoginInputPanel.setLayout(LoginInputPanelLayout);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Nick:");
        jLabel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.1;
        LoginInputPanel.add(jLabel8, gridBagConstraints);

        nickLoginTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nickLoginTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nickLoginTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.1;
        LoginInputPanel.add(nickLoginTextField, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Password:");
        jLabel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.1;
        LoginInputPanel.add(jLabel9, gridBagConstraints);

        passwordLoginTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordLoginTextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.1;
        LoginInputPanel.add(passwordLoginTextField, gridBagConstraints);

        loginButton.setBackground(new java.awt.Color(51, 153, 0));
        loginButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        loginButton.setForeground(new java.awt.Color(102, 102, 102));
        loginButton.setText("LOGIN NOW!");
        loginButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.1;
        LoginInputPanel.add(loginButton, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 25));
        jLabel1.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.2;
        LoginInputPanel.add(jLabel1, gridBagConstraints);

        LoginPanel.add(LoginInputPanel, java.awt.BorderLayout.CENTER);

        LoginRegisterPanel.add(LoginPanel);

        add(LoginRegisterPanel, java.awt.BorderLayout.CENTER);

        backgroundLabel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                backgroundLabelComponentResized(evt);
            }
        });
        add(backgroundLabel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void nickRegisterTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nickRegisterTextFieldKeyTyped
        playSound("/Resources/key.wav");
    }//GEN-LAST:event_nickRegisterTextFieldKeyTyped

    private void passwordRegisterTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordRegisterTextFieldKeyTyped
        playSound("/Resources/key.wav");
    }//GEN-LAST:event_passwordRegisterTextFieldKeyTyped

    private void repeatRegisterTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_repeatRegisterTextFieldKeyTyped
        playSound("/Resources/key.wav");
    }//GEN-LAST:event_repeatRegisterTextFieldKeyTyped

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        playSound("/xorgame/client/button.wav");

        String nick = nickRegisterTextField.getText();
        String password = passwordRegisterTextField.getText();
        String repeat = repeatRegisterTextField.getText();

        if( !nick.matches("^[a-zA-Z0-9]*$") )
            JOptionPane.showMessageDialog(this, "Nick may contain only letters and digits!", "Nick error!", JOptionPane.ERROR_MESSAGE);
        else if(nick.isEmpty())
            JOptionPane.showMessageDialog(this, "Enter your nick!", "Nick empty!", JOptionPane.ERROR_MESSAGE);
        else if(password.isEmpty())
            JOptionPane.showMessageDialog(this, "Enter your password!", "Password empty!", JOptionPane.ERROR_MESSAGE);
        else if(repeat.isEmpty())
            JOptionPane.showMessageDialog(this, "Repeat your password!","Password empty!", JOptionPane.ERROR_MESSAGE);
        else if(!password.equals(repeat))
            JOptionPane.showMessageDialog(this, "Passwords must be the same!", "Passwords error!", JOptionPane.ERROR_MESSAGE);
        else
        try {
            main.getMainControler().addNewUser(nick, password);
            JOptionPane.showMessageDialog(this, "You are registered! Now you may login on your account.");
            nickRegisterTextField.setText("");
            passwordRegisterTextField.setText("");
            repeatRegisterTextField.setText("");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "User already exists!", "DB error!", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void nickLoginTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nickLoginTextFieldKeyTyped
        playSound("/Resources/key.wav");
    }//GEN-LAST:event_nickLoginTextFieldKeyTyped

    private void passwordLoginTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordLoginTextFieldKeyTyped
        playSound("/Resources/key.wav");
    }//GEN-LAST:event_passwordLoginTextFieldKeyTyped

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        //playSound("/xorgame/client/button.wav");

        String nick = nickLoginTextField.getText();
        String password = passwordLoginTextField.getText();

        if( !nick.matches("^[a-zA-Z0-9]*$") )
            JOptionPane.showMessageDialog(this, "Nick may contain only letters and digits!", "Nick error!", JOptionPane.ERROR_MESSAGE);
        else if(nick.isEmpty())
            JOptionPane.showMessageDialog(this, "Enter your nick!", "Nick empty!", JOptionPane.ERROR_MESSAGE);
        else if(password.isEmpty())
            JOptionPane.showMessageDialog(this, "Enter your password!", "Password empty!", JOptionPane.ERROR_MESSAGE);
        else
        try {
            if(! main.getMainControler().passwordCorrect(nick, password))
                JOptionPane.showMessageDialog(this, "Nick or password invalid!", "Error!", JOptionPane.ERROR_MESSAGE);
            else {
                main.setUser( main.getMainControler().getUserData(nickLoginTextField.getText()) );
                
                main.getMaterials().updateComboBox();
                main.getMaterials().updateMaterials();
                main.updateAll();
                
                CardLayout layout = (CardLayout)main.getContentPane().getLayout();
                layout.show(main.getContentPane(), "Main");
                
                CardLayout layoutWork = (CardLayout)main.getWorkPanel().getLayout();
                layoutWork.show(main.getWorkPanel(), "PreviewCard");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error while connecting to game server! Check your internet connection", "DB error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void backgroundLabelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_backgroundLabelComponentResized
        backgroundLabel.setIcon(loadIcon("/xorgame/client/General_GUI/StartBackground2.jpg", this.getWidth()));
    }//GEN-LAST:event_backgroundLabelComponentResized


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LoginInputPanel;
    private javax.swing.JLabel LoginLabel;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JPanel LoginRegisterPanel;
    private javax.swing.JLabel LogoLabel;
    private javax.swing.JPanel RegisterInputPanel;
    private javax.swing.JLabel RegisterLabel;
    private javax.swing.JPanel RegisterPanel;
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton loginButton;
    private javax.swing.JTextField nickLoginTextField;
    private javax.swing.JLabel nickRegisterLabel;
    private javax.swing.JTextField nickRegisterTextField;
    private javax.swing.JPasswordField passwordLoginTextField;
    private javax.swing.JLabel passwordRegisterLabel;
    private javax.swing.JPasswordField passwordRegisterTextField;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel repeatRegisterLabel;
    private javax.swing.JPasswordField repeatRegisterTextField;
    // End of variables declaration//GEN-END:variables
}
