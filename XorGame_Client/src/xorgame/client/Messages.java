/* This software is licensed under XorGame 1.0 license. License does not expire.
 * Can be used for creating unlimited applications.
 * Can be distributed in binary or object form only.
 * Non-commercial use only.
 * Cannot modify source-code for any purpose (cannot create derivative works).
 */
package xorgame.client;


import xorgame.*;
import java.util.*;
import java.awt.*;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static xorgame.client.Shared.*;
import static xorgame.client.Shared.*;

/**
 *
 * @author Artur
 */
public class Messages extends javax.swing.JPanel {
    Main main;
    Thread autoUpdater;
    
    /**
     * Creates new form Messages
     */
    public Messages() {
        initComponents();
        autoUpdater = new Thread(() -> {
            while(true) {
                try {
                    autoUpdater.sleep(AUTO_UPDATE_PERIOD);
                    updateMessages();
                } catch (InterruptedException ex) {
                    Logger.getLogger(Messages.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public void setMainParent(Main main_) {
        main = main_;
    }
    
    public void startAutoUpdater() {
        autoUpdater.start();
    }
    
    public void updateMessages() {
        java.util.List<Message> messages = new ArrayList();
        for(Message msg : main.getUser().getMessageSet1()) {
            messages.add(msg);
        }
        messages.sort(( Message msg1, Message msg2) -> {
            if(msg1.getSendTime().after(msg2.getSendTime()))
                return -1;
            else if(msg1.getSendTime().before(msg2.getSendTime()))
                return 1;
            else 
                return 0;
        });
        messagesPanel.setVisible(false); 
        messagesPanel.removeAll();
        for(Message msg : messages) {
            MessagePanel message = new MessagePanel();
            message.setMainParent(main); 
            message.setContent(msg); 
            messagesPanel.add(message);
        }
        messagesPanel.validate();
        messagesPanel.setVisible(true); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        newMessage = new javax.swing.JButton();
        deleteAllButton = new javax.swing.JButton();
        messagesScrollPanel = new javax.swing.JScrollPane();
        messagesPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(0, 0, 25));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });
        setLayout(new java.awt.BorderLayout(20, 20));

        jPanel1.setBackground(new java.awt.Color(0, 0, 25));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        newMessage.setBackground(new java.awt.Color(0, 0, 25));
        newMessage.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        newMessage.setForeground(new java.awt.Color(255, 255, 255));
        newMessage.setText("New Message");
        newMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMessageActionPerformed(evt);
            }
        });
        jPanel1.add(newMessage);

        deleteAllButton.setBackground(new java.awt.Color(153, 0, 0));
        deleteAllButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteAllButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteAllButton.setText("Delete all");
        deleteAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteAllButton);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        messagesScrollPanel.getVerticalScrollBar().setUnitIncrement(SCROLL_SPEED);

        messagesPanel.setBackground(new java.awt.Color(0, 0, 25));
        messagesPanel.setLayout(new javax.swing.BoxLayout(messagesPanel, javax.swing.BoxLayout.Y_AXIS));
        messagesScrollPanel.setViewportView(messagesPanel);

        add(messagesScrollPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void newMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMessageActionPerformed
        main.getNewMessage().setFrom(main.getUser().getNick()); 
        main.getNewMessage().setContent(""); 
        CardLayout layout = (CardLayout)main.getWorkPanel().getLayout();
        layout.show(main.getWorkPanel(), "NewMessageCard"); 
    }//GEN-LAST:event_newMessageActionPerformed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped

    }//GEN-LAST:event_formKeyTyped

    private void deleteAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllButtonActionPerformed
        if(JOptionPane.showConfirmDialog(main, "Do you want to delete all messages?", "Really?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                for(Message msg : main.getUser().getMessageSet1()) {
                    main.getMainControler().deleteMessage(msg);
                }
                updateMessages();
                messagesPanel.removeAll();
            } catch(SQLException ex) {
                JOptionPane.showMessageDialog(main, "Error while connecting to game server!", "Error", JOptionPane.ERROR_MESSAGE); 
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deleteAllButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteAllButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel messagesPanel;
    private javax.swing.JScrollPane messagesScrollPanel;
    private javax.swing.JButton newMessage;
    // End of variables declaration//GEN-END:variables
}
